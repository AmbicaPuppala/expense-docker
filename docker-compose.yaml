networks:
  expense: {}
volumes:
  mysql:
services:
  backend:
    image: joindevops/backend:1.0.0
    command: sh -c "sleep 30 && node /opt/backend/index.js"
    networks:
    - expense
    container_name: backend
    depends_on:
    - mysql

  # docker run -d --name mysql --network expense -v mysql:/var/lib/mysql mysql:1.0.0
  mysql:
    image: joindevops/mysql:1.0.0
    networks:
    - expense
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql

  frontend:
    image: joindevops/frontend:1.0.0
    networks:
    - expense
    container_name: frontend
    ports:
    - 80:80
    depends_on:
    - backend
  
  

# name: expense
# version: "3.8"
# networks:
#   default:
#     name: expense
# volumes:
#   mysql: # docker volume create mysql
# services:
#   mysql:
#     image: joindevops/mysql:1.0.0
#     container_name: mysql # -- name mysql
#     # environment:
#     #   - MYSQL_ROOT_PASSWORD=ExpenseApp@1
#     #   - MYSQL_USER=expense
#     #   - MYSQL_PASSWORD=ExpenseApp@1
#     #   - MYSQL_DATABASE=transactions
#     volumes:
#       - source: mysql # - mysql1:/var/lib/mysql 
#         target: /var/lib/mysql
#         type: volume # -v <volume-name>:/path/in/container
#   # mysql:
#   #   image: mysql:v1.0.0
#   #   container_name: mysql # --name mysql
#   #   volumes:
#   #   - mysql:/var/lib/mysql # -v volume-name:/path-in-container
#   backend:
#     image: joindevops/backend:1.0.0
#     container_name: backend # --name backend
#     command: sh -c "sleep 30  && node /opt/backend/index.js"
#     depends_on:
#       - mysql
      
#   frontend:
#     image: joindevops/frontend:1.0.0
#     container_name: frontend # --name frontend
#     depends_on:
#       - backend
#     ports:
#     - "80:80"

